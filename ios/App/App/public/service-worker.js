const s=location.pathname.split("/").slice(0,-1).join("/"),m=[s+"/_app/immutable/entry/app.D2Db760F.js",s+"/_app/immutable/nodes/0.nNNnJhT9.js",s+"/_app/immutable/assets/0.BlstShl8.css",s+"/_app/immutable/nodes/1.BYBXjir9.js",s+"/_app/immutable/nodes/10.ZA0DKKLr.js",s+"/_app/immutable/nodes/11.aQk5ah-h.js",s+"/_app/immutable/nodes/12.DnUqYx4v.js",s+"/_app/immutable/nodes/13.BK1r0N6X.js",s+"/_app/immutable/nodes/14.B3esv_wb.js",s+"/_app/immutable/nodes/15.CcFvQchb.js",s+"/_app/immutable/nodes/2.DqYrcJ6c.js",s+"/_app/immutable/assets/2.B_y7shiW.css",s+"/_app/immutable/nodes/3.DD5MmskL.js",s+"/_app/immutable/nodes/4.BFTOGsBZ.js",s+"/_app/immutable/assets/4.BhwtAa9K.css",s+"/_app/immutable/nodes/5.DlM3J-3w.js",s+"/_app/immutable/nodes/6.CAXylOy_.js",s+"/_app/immutable/nodes/7.C6NhVK9n.js",s+"/_app/immutable/nodes/8.CC_jcsG7.js",s+"/_app/immutable/nodes/9.CiumNwAD.js",s+"/_app/immutable/assets/page test component.BGi4CnAa.css",s+"/_app/immutable/chunks/0BgssLRt.js",s+"/_app/immutable/chunks/BWrrr2UW.js",s+"/_app/immutable/chunks/Bxxk8_gp.js",s+"/_app/immutable/chunks/CIcFpKZC.js",s+"/_app/immutable/chunks/CSakxPC0.js",s+"/_app/immutable/chunks/CT7FsKwp.js",s+"/_app/immutable/chunks/CuoJPY7j.js",s+"/_app/immutable/chunks/DPN-45CN.js",s+"/_app/immutable/chunks/DXqvFF_9.js",s+"/_app/immutable/chunks/DdAoaxhc.js",s+"/_app/immutable/chunks/VSa3Vf03.js",s+"/_app/immutable/chunks/XY3jfjSl.js",s+"/_app/immutable/entry/start.BT_zqjLz.js"],o=[s+"/apple-touch-icon-180x180.png",s+"/favicon.ico",s+"/generic.png",s+"/gift-page-assets/Gift card 1.png",s+"/gift-page-assets/Message Card.png",s+"/manifest.json",s+"/maskable-icon-512x512.png",s+"/Monytri-01-1.png",s+"/Property 1=Inbox.svg",s+"/pwa-192x192.png",s+"/pwa-512x512.png",s+"/pwa-64x64.png"],l="1743801345622";console.log({build:m,files:o,version:l});console.log("service worker is running");const u="Monytri-PWA",i=`${u}-cache-${l}`,r=[...m,...o];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(r)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t.startsWith(u)&&t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(r.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const c=await p.match(a.request);if(c)return c;throw e}}a.respondWith(n())});self.addEventListener("message",a=>{a.data&&a.data.type==="SKIP_WAITING"&&self.skipWaiting()});
